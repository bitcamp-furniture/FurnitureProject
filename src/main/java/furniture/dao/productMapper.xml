<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productSQL">

	<!-- 상품 문의 write -->
   <insert id="productQnAWrite" parameterType="qna">
      insert into
      product_qna values(seq_product_qna.nextval, #{email}, #{product_id},
      #{product_name},#{qna_subject}, #{qna_content}, sysdate, 0,null,null)
   </insert>
	
	<!-- < 상품 문의 전체 리스트 
	<select id="productQnAList" resultType="qna" parameterType="java.util.Map">
		select * from product_qna where product_name=#{product_name}
	</select> -->

	<!-- 상품 문의 리스트 + 페이징 -->
	<select id="productQnAListPaging" resultType="qna" parameterType="java.util.Map">
 		select * from
		(select rownum rn, tt.* from
		(select * from product_qna where product_name=#{product_name} order by id desc)tt
		)where rn &gt;= #{startNum} and rn &lt;= #{endNum}
	</select>

	<!-- 상품 문의 총 글수 -->
	<select id="getTotalQNA" resultType="int" parameterType="String">
		select count(*) from product_qna where product_name=#{product_name} order by created_atQ desc
	</select>

	<!-- 리뷰 전체 리스트 + 페이징 -->
	<select id="reviewList" resultType="review" parameterType="java.util.Map">
 		select * from 
		(select rownum rn, tt.* from 
		(select * from review where product_name=#{product_name} order by id desc)tt
		)where rn &gt;= #{startNum} and rn &lt;= #{endNum}
	</select>

	<!-- 리뷰 top 5 -->
	<select id="reviewListTop5" resultType="review" >
		select * from 
		(select rownum rn, tt.* from 
		(select * from REVIEW order by review_stars desc)tt
		)where rn &lt;= 6
    </select> 

	<!-- 상품 리뷰 일간  글수 -->
	<select id="getTotalReview" resultType="int" parameterType="String">
		select count(*) from review where product_name=#{product_name} order by created_at desc
	</select>
	
	<!-- 리뷰 일별 글수 -->
	<!--  
	<select id="reviewDay" resultType="review">
 		<![CDATA[
 		select TO_CHAR(created_at,'YYMMDD'),
 		count(*) 
 		from review
		where created_at >='210101' 
		and created_at < to_char(sysdate,'YYMMDD') 
		GROUP BY to_char(created_at,'YYMMDD')
		]]>
	</select>
	-->
	<!-- 리뷰 일별 글수 -->
	<select id="reviewDay" resultType="int">
 		<![CDATA[
	 		select 
	 		count(*) 
	 		from review
			where created_at >='210101' 
			and created_at < to_char(sysdate,'YYMMDD') 
			GROUP BY to_char(created_at,'YYMMDD')
		]]>
	</select>
      
	<!--베스트 셀러 -->
	<select id="getBestSeller" resultType="productList">
 		<![CDATA[
 		select * from (
          select rownum rn, tt.* from
              (select distinct p.PRODUCT_CODE, p.PRODUCT_NAME, p.PRODUCT_PRICE, p.PRODUCT_CATEGORY1,
                p.PRODUCT_CATEGORY2, p.PRODUCT_CATEGORY_NAME, i.PRODUCT_IMG_THUMB, p.id from 
                  product p   
              join product_image i
               on p.PRODUCT_CODE = i.PRODUCT_CODE
              ORDER BY product_price desc)tt)
      WHERE ROWNUM <= 8
		]]>
	</select>
	
	
	<!-- 이미지 업로드 -->
	<insert id="productRegistration" parameterType="product">
		insert into product values(seq_product.nextval
									, #{product_name}
									, #{product_code}
									, #{product_price}
									, #{product_category_name}
									, #{product_category1}
									, #{product_category2}
									, #{product_memo}
									)
	</insert>
	
	<!-- 이미지 업로드 -->
	<insert id="productImageRegistration" parameterType="productImage">
		insert into product_Image values(
									seq_Product_Image.nextval
									, #{id}
									, #{product_code}
									, #{product_img_thumb}
									, #{product_img_detail}
									)
	</insert>
	
	<!-- 상품 옵션 업로드 -->
	<insert id="productOptionRegistration" parameterType="productOption">
		insert into product_option values(
									seq_product_option.nextval
									, #{id}
									, #{color}
									, #{color_name}
									)
	</insert>
	
	<select id="getIdToOneData" parameterType="Integer" resultType="product">
		select * from product where id=#{id}
	</select>
	
	<select id="getIdToImageData" parameterType="Integer" resultType="productImage">
		select * from product_Image where id=#{id}
	</select>
	
	<select id="getProductId" parameterType="String" resultType="Integer">
		select id from product where product_code=#{product_code}
	</select>

	<select id="getIdOption" parameterType="Integer" resultType="productOption">
		select * from product_option where id=#{id}
	</select>

	<!-- 페이지띄울 때 찜했는지 안했는지 -->
	<select id="wishQ" parameterType="java.util.Map" resultType="wishList">
		select * from wishlist where member_id=#{memId} and product_id=#{id}
	</select>
	
	<!-- 찜추가 -->
	<insert id="addWishButton" parameterType="java.util.Map">
		insert into wishlist values(
									seq_wishlist.nextval
									, #{memId}
									, #{id}
									)
	</insert>
	
	<!-- 찜제거 -->
	<delete id="deleteWishButton" parameterType="java.util.Map">
		delete from wishlist where member_id=#{memId} and product_id=#{id}
	</delete>

	<!-- 장바구니 추가 -->
	<insert id="addCart" parameterType="java.util.Map">
		insert into cart values(seq_cart.nextval
							   , #{member_id}
							   , #{product_id}
							   , #{product_option_color}
							   , #{product_count}
							   )
	</insert>

	<select id="getcart" parameterType="java.util.Map" resultType="cart">
		select * from cart where product_id=#{product_id} and product_option_color=#{product_option_color} and member_id=#{member_id}
	</select>

	<update id="updateCart" parameterType="java.util.Map">
		update cart set product_count=(product_count+#{product_count})
			where product_id=#{product_id}
			  and product_option_color=#{product_option_color}
			  and member_id=#{member_id}
	</update>

</mapper>